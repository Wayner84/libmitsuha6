name: Build & Release (rootless .deb)

on:
  push:
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install deps (brew)
        run: |
          brew update
          brew install dpkg ldid

      - name: Set up THEOS (with submodules) + SDK links
        env:
          # Change this if your Makefile TARGET ends with another min iOS
          MIN_IOS: "9.2"
        run: |
          # Theos + submodules (dm.pl etc.)
          git clone --depth=1 --recurse-submodules https://github.com/theos/theos.git "$HOME/theos"
          git -C "$HOME/theos" submodule update --init --recursive

          # Make it available at /opt/theos for projects that expect that path
          sudo mkdir -p /opt
          sudo ln -s "$HOME/theos" /opt/theos || true

          # Resolve SDK path from Xcode toolchain
          SDK_PATH="$(xcrun --sdk iphoneos --show-sdk-path)"
          SDK_VER="$(xcrun --sdk iphoneos --show-sdk-version)"   # e.g., 18.0
          mkdir -p "$HOME/theos/sdks"

          # Generic link
          ln -snf "$SDK_PATH" "$HOME/theos/sdks/iPhoneOS.sdk"
          # Compat links â€” Theos often wants iPhoneOS<MIN>.sdk or iPhoneOS<SDK_VER>.sdk
          ln -snf "$SDK_PATH" "$HOME/theos/sdks/iPhoneOS${MIN_IOS}.sdk"
          ln -snf "$SDK_PATH" "$HOME/theos/sdks/iPhoneOS${SDK_VER}.sdk"

          echo "THEOS=$HOME/theos" >> $GITHUB_ENV

          # Sanity
          test -f "$HOME/theos/bin/dm.pl" || (echo "dm.pl missing" && exit 1)
          ls -la "$HOME/theos/sdks"

      - name: Build & Package (rootless)
        env:
          THEOS: ${{ env.THEOS }}
        run: |
          make clean package THEOS_PACKAGE_SCHEME=rootless
          ls -la packages

      - name: Upload deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: debs
          path: packages/*.deb
          if-no-files-found: error

      - name: Create GitHub Release (attach deb)
        uses: softprops/action-gh-release@v2
        with:
          files: packages/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
